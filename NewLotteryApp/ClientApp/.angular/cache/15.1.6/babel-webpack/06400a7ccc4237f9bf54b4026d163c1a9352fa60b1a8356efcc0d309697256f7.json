{"ast":null,"code":"import { map } from \"rxjs/operators\";\nimport { DrawHistory } from \"../models/DrawHistory\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Lottery {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = \"/api/draws/\";\n    this.label = \"Draw\";\n  }\n  draw() {\n    this.GetDrawNumbers().subscribe(response => {\n      this.callback();\n      console.log(JSON.stringify(response));\n    }, error => console.log(\"Error\"));\n  }\n  callback() {\n    var drawHistory = new DrawHistory();\n    drawHistory.draw = this.drawNumbers;\n    this.SaveDrawNumbers(drawHistory);\n    this.label = \"Draw again\";\n  }\n  loadDrawHistory() {\n    return this.http.get(this.baseURL + \"drawHistory\").pipe(map(data => {\n      this.drawHistory = data;\n      return;\n    }));\n  }\n  GetDrawNumbers() {\n    return this.http.get(this.baseURL + \"NewDraw\").pipe(map(data => {\n      this.drawNumbers = data;\n      return;\n    }));\n  }\n  SaveDrawNumbers(drawHistory) {\n    console.log(JSON.stringify(drawHistory));\n    return this.http.post(this.baseURL + \"SaveDraw\", drawHistory).subscribe(response => console.log(JSON.stringify(response)), error => console.log(error));\n  }\n}\nLottery.ɵfac = function Lottery_Factory(t) {\n  return new (t || Lottery)(i0.ɵɵinject(i1.HttpClient));\n};\nLottery.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Lottery,\n  factory: Lottery.ɵfac\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAAQ,uBAAuB;;;AAGnD,OAAM,MAAOC,OAAO;EAClBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAKjB,YAAO,GAAG,aAAa;IACvB,UAAK,GAAG,MAAM;EANmB;EAQxCC,IAAI;IACF,IAAI,CAACC,cAAc,EAAE,CAClBC,SAAS,CACRC,QAAQ,IAAG;MACT,IAAI,CAACC,QAAQ,EAAE;MACfC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;IAEvC,CAAC,EAAEM,KAAK,IAAIJ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC;EAGvC;EAEAF,QAAQ;IACN,IAAIM,WAAW,GAAG,IAAId,WAAW,EAAE;IACnCc,WAAW,CAACV,IAAI,GAAG,IAAI,CAACW,WAAW;IACnC,IAAI,CAACC,eAAe,CAACF,WAAW,CAAC;IACjC,IAAI,CAACG,KAAK,GAAG,YAAY;EAC3B;EAEAC,eAAe;IACb,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAAgB,IAAI,CAACC,OAAO,GAAG,aAAa,CAAC,CAC9DC,IAAI,CAACtB,GAAG,CAACuB,IAAI,IAAG;MACf,IAAI,CAACR,WAAW,GAAGQ,IAAI;MACvB;IACF,CAAC,CAAC,CAAC;EACP;EAEAjB,cAAc;IACZ,OAAO,IAAI,CAACF,IAAI,CAACgB,GAAG,CAAW,IAAI,CAACC,OAAO,GAAG,SAAS,CAAC,CACrDC,IAAI,CAACtB,GAAG,CAACuB,IAAI,IAAG;MACf,IAAI,CAACP,WAAW,GAAGO,IAAI;MACvB;IACF,CAAC,CAAC,CAAC;EACP;EAEAN,eAAe,CAACF,WAAwB;IACtCL,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACE,WAAW,CAAC,CAAC;IACxC,OAAO,IAAI,CAACX,IAAI,CAACoB,IAAI,CAAC,IAAI,CAACH,OAAO,GAAG,UAAU,EAAEN,WAAW,CAAC,CAC1DR,SAAS,CACRC,QAAQ,IAAIE,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC,EACjDM,KAAK,IAAIJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAC5B;EACL;;AAnDWZ,OAAO;mBAAPA,OAAO;AAAA;AAAPA,OAAO;SAAPA,OAAO;EAAAuB,SAAPvB,OAAO;AAAA","names":["map","DrawHistory","Lottery","constructor","http","draw","GetDrawNumbers","subscribe","response","callback","console","log","JSON","stringify","error","drawHistory","drawNumbers","SaveDrawNumbers","label","loadDrawHistory","get","baseURL","pipe","data","post","factory"],"sourceRoot":"","sources":["C:\\Users\\MSLOWIK\\source\\repos\\NewLotteryApp\\NewLotteryApp\\ClientApp\\src\\app\\services\\lottery.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\"\r\nimport { DrawHistory } from \"../models/DrawHistory\";\r\n\r\n@Injectable()\r\nexport class Lottery {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public drawHistory: DrawHistory[];\r\n  public drawNumbers: number[];\r\n  public saveResponse;\r\n  public baseURL = \"/api/draws/\";\r\n  public label = \"Draw\";\r\n\r\n  draw() {\r\n    this.GetDrawNumbers()\r\n      .subscribe(\r\n        response => {\r\n          this.callback();\r\n          console.log(JSON.stringify(response));\r\n\r\n        }, error => console.log(\"Error\"));\r\n\r\n\r\n  }\r\n\r\n  callback() {\r\n    var drawHistory = new DrawHistory();\r\n    drawHistory.draw = this.drawNumbers;\r\n    this.SaveDrawNumbers(drawHistory)\r\n    this.label = \"Draw again\";\r\n  }\r\n\r\n  loadDrawHistory() {\r\n    return this.http.get<DrawHistory[]>(this.baseURL + \"drawHistory\")\r\n      .pipe(map(data => {\r\n        this.drawHistory = data;\r\n        return;\r\n      }));\r\n  }\r\n\r\n  GetDrawNumbers() {\r\n    return this.http.get<number[]>(this.baseURL + \"NewDraw\")\r\n      .pipe(map(data => {\r\n        this.drawNumbers = data;\r\n        return; \r\n      }));\r\n  }\r\n\r\n  SaveDrawNumbers(drawHistory: DrawHistory){\r\n    console.log(JSON.stringify(drawHistory));\r\n    return this.http.post(this.baseURL + \"SaveDraw\", drawHistory)\r\n      .subscribe(\r\n        response => console.log(JSON.stringify(response)),\r\n        error => console.log(error)\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}